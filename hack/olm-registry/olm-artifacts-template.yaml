apiVersion: v1
kind: Template
parameters:
- name: REGISTRY_IMG
  required: true
- name: CHANNEL
  required: true
- name: IMAGE_TAG
  required: true
- name: REPO_NAME
  value: cloud-ingress-operator
  required: true
- name: ALLOWED_CIDR_BLOCKS
  required: true
- name: ENABLE_MANAGEMENT_API_SERVER_INGRESS
  required: true
metadata:
  name: selectorsyncset-template
objects:
- apiVersion: hive.openshift.io/v1
  kind: SelectorSyncSet
  metadata:
    labels:
      managed.openshift.io/gitHash: ${IMAGE_TAG}
      managed.openshift.io/gitRepoName: ${REPO_NAME}
      managed.openshift.io/osd: 'true'
    name: cloud-ingress-operator
  spec:
    clusterDeploymentSelector:
      matchLabels:
        api.openshift.com/managed: 'true'
        hive.openshift.io/cluster-platform: aws
    resourceApplyMode: Sync
    resources:
    - kind: Namespace
      apiVersion: v1
      metadata:
        name: openshift-cloud-ingress-operator
        labels:
          openshift.io/cluster-monitoring: 'true'
    - apiVersion: cloudcredential.openshift.io/v1
      kind: CredentialsRequest
      metadata:
        name: cloud-ingress-operator-credentials
        namespace: openshift-cloud-ingress-operator
      spec:
        secretRef:
          name: cloud-ingress-operator-credentials
          namespace: openshift-cloud-ingress-operator
        providerSpec:
          apiVersion: cloudcredential.openshift.io/v1
          kind: AWSProviderSpec
          statementEntries:
          - effect: Allow
            resource: '*'
            action:
            - elasticloadbalancing:*
            - ec2:DescribeAccountAttributes
            - ec2:DescribeAddresses
            - ec2:DescribeInternetGateways
            - ec2:DescribeSecurityGroups
            - ec2:DescribeSubnets
            - ec2:DescribeVpcs
            - ec2:DescribeVpcClassicLink
            - ec2:DescribeInstances
            - ec2:DescribeNetworkInterfaces
            - ec2:DescribeClassicLinkInstances
            - ec2:DescribeRouteTables
            - ec2:AuthorizeSecurityGroupEgress
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:CreateSecurityGroup
            - ec2:DeleteSecurityGroup
            - ec2:DescribeInstanceAttribute
            - ec2:DescribeInstanceStatus
            - ec2:DescribeNetworkAcls
            - ec2:DescribeSecurityGroups
            - ec2:RevokeSecurityGroupEgress
            - ec2:RevokeSecurityGroupIngress
            - ec2:DescribeTags
            - ec2:CreateTags
            - ec2:DeleteTags
            - route53:ChangeResourceRecordSets
            - route53:GetHostedZone
            - route53:GetHostedZoneCount
            - route53:ListHostedZones
            - route53:ListHostedZonesByName
            - route53:ListResourceRecordSets
            - route53:UpdateHostedZoneComment
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        creationTimestamp: null
        name: cloud-ingress-operator
        namespace: openshift-cloud-ingress-operator
      rules:
      - apiGroups:
        - machine.openshift.io
        resources:
        - machines
        - machinesets
        verbs:
        - get
        - list
        - watch
        - patch
        - update
      - apiGroups:
        - operator.openshift.io
        resources:
        - ingresscontrollers
        verbs:
        - get
        - list
        - watch
        - delete
        - create
      - apiGroups:
        - config.openshift.io
        resources:
        - infrastructures
        - apiservers
        verbs:
        - list
        - get
        - watch
      - apiGroups:
        - config.openshift.io
        resources:
        - apiservers
        verbs:
        - patch
        - update
        - watch
      - apiGroups:
        - cloudingress.managed.openshift.io
        resources:
        - '*'
        - apischemes
        - publishingstrategies
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - ''
        resources:
        - pods
        - services
        - services/finalizers
        - endpoints
        - persistentvolumeclaims
        - events
        - configmaps
        - secrets
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - apps
        resources:
        - deployments
        - daemonsets
        - replicasets
        - statefulsets
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - monitoring.coreos.com
        resources:
        - servicemonitors
        verbs:
        - get
        - create
      - apiGroups:
        - apps
        resourceNames:
        - cloud-ingress-operator
        resources:
        - deployments/finalizers
        verbs:
        - update
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - get
      - apiGroups:
        - apps
        resources:
        - replicasets
        - deployments
        verbs:
        - get
      - apiGroups:
        - ingress.operator.openshift.io
        resources:
        - dnsrecords
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        creationTimestamp: null
        name: cluster-config-v1-reader-cio
        namespace: kube-system
      rules:
      - apiGroups:
        - ''
        resourceNames:
        - cluster-config-v1
        resources:
        - configmaps
        verbs:
        - get
    - kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: cloud-ingress-operator-cluster-config-v1-reader
        namespace: kube-system
        labels:
          owner: cloud-ingress-operator
          owner.namespace: openshift-cloud-ingress-operator
      subjects:
      - kind: ServiceAccount
        name: cloud-ingress-operator
        namespace: openshift-cloud-ingress-operator
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: cluster-config-v1-reader-cio
    - kind: ClusterRoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: cloud-ingress-operator
      subjects:
      - kind: ServiceAccount
        name: cloud-ingress-operator
        namespace: openshift-cloud-ingress-operator
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cloud-ingress-operator
    - kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: cloud-ingress-operator
        namespace: openshift-cloud-ingress-operator
      subjects:
      - kind: ServiceAccount
        name: cloud-ingress-operator
        namespace: openshift-cloud-ingress-operator
      roleRef:
        kind: Role
        name: cloud-ingress-operator
        namespace: openshift-cloud-ingress-operator
        apiGroup: rbac.authorization.k8s.io
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: prometheus-k8s
        namespace: openshift-cloud-ingress-operator
      rules:
      - apiGroups:
        - ''
        resources:
        - services
        - endpoints
        - pods
        verbs:
        - get
        - list
        - watch
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: prometheus-k8s
        namespace: openshift-cloud-ingress-operator
      roleRef:
        kind: Role
        name: prometheus-k8s
      subjects:
      - kind: ServiceAccount
        name: prometheus-k8s
        namespace: openshift-monitoring
    - apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        labels:
          opsrc-datastore: 'true'
          opsrc-provider: redhat
        name: ${REPO_NAME}-registry
        namespace: openshift-${REPO_NAME}
      spec:
        image: ${REGISTRY_IMG}:${CHANNEL}-${IMAGE_TAG}
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/infra
                  operator: Exists
              weight: 1
        tolerations:
        - operator: Equal
          key: node-role.kubernetes.io
          value: infra
          effect: PreferNoSchedule
        displayName: ${REPO_NAME}
        icon:
          base64data: ''
          mediatype: ''
        publisher: Red Hat
        sourceType: grpc
    - apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: ${REPO_NAME}
        namespace: openshift-${REPO_NAME}
      spec:
        targetNamespaces:
        - openshift-${REPO_NAME}
    - apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: ${REPO_NAME}
        namespace: openshift-${REPO_NAME}
      spec:
        channel: ${CHANNEL}
        name: ${REPO_NAME}
        source: ${REPO_NAME}-registry
        sourceNamespace: openshift-${REPO_NAME}
    - apiVersion: cloudingress.managed.openshift.io/v1alpha1
      kind: APIScheme
      metadata:
        name: rh-api
        namespace: openshift-cloud-ingress-operator
        annotations:
          allowedCIDRBlocks: ${ALLOWED_CIDR_BLOCKS}
      spec:
        managementAPIServerIngress:
          enabled: ${{ENABLE_MANAGEMENT_API_SERVER_INGRESS}}
          dnsName: rh-api
          allowedCIDRBlocks: ${{ALLOWED_CIDR_BLOCKS}}
    - apiVersion: cloudingress.managed.openshift.io/v1alpha1
      kind: SSHD
      metadata:
        name: rh-ssh
        namespace: openshift-sre-sshd
      spec:
        dnsName: rh-ssh
        allowedCIDRBlocks: ${{ALLOWED_CIDR_BLOCKS}}
        image: quay.io/app-sre/sre-ssh-proxy:v49-1fde8e5
- apiVersion: hive.openshift.io/v1
  kind: SelectorSyncSet
  metadata:
    labels:
      managed.openshift.io/gitHash: ${IMAGE_TAG}
      managed.openshift.io/gitRepoName: ${REPO_NAME}
      managed.openshift.io/osd: 'true'
    name: cloud-ingress-operator-crds
  spec:
    clusterDeploymentSelector:
      matchLabels:
        api.openshift.com/managed: 'true'
        hive.openshift.io/cluster-platform: aws
    resourceApplyMode: Sync
    resources:
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: apischemes.cloudingress.managed.openshift.io
      spec:
        group: cloudingress.managed.openshift.io
        names:
          kind: APIScheme
          listKind: APISchemeList
          plural: apischemes
          singular: apischeme
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            description: APIScheme is the Schema for the APISchemes API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: APISchemeSpec defines the desired state of APIScheme
                properties:
                  managementAPIServerIngress:
                    description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of
                      cluster Important: Run "operator-sdk generate k8s" to regenerate
                      code after modifying this file Add custom validation using kubebuilder
                      tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
                    properties:
                      allowedCIDRBlocks:
                        description: AllowedCIDRBlocks is the list of CIDR blocks
                          that should be allowed to access the management API
                        items:
                          type: string
                        type: array
                      dnsName:
                        description: DNSName is the name that should be used for DNS
                          of the management API, eg rh-api
                        type: string
                      enabled:
                        description: Enabled to create the Management API endpoint
                          or not.
                        type: boolean
                    required:
                    - allowedCIDRBlocks
                    - dnsName
                    - enabled
                    type: object
                required:
                - managementAPIServerIngress
                type: object
              status:
                description: APISchemeStatus defines the observed state of APIScheme
                properties:
                  cloudLoadBalancerDNSName:
                    description: 'INSERT ADDITIONAL STATUS FIELD - define observed
                      state of cluster Important: Run "operator-sdk generate k8s"
                      to regenerate code after modifying this file Add custom validation
                      using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
                    type: string
                  conditions:
                    items:
                      description: APISchemeCondition is the history of transitions
                      properties:
                        allowedCIDRBlocks:
                          description: AllowedCIDRBlocks currently allowed (as of
                            the last successful Security Group update)
                          items:
                            type: string
                          type: array
                        lastProbeTime:
                          description: LastProbeTime last time probed
                          format: date-time
                          type: string
                        lastTransitionTime:
                          description: LastTransitionTime Last change to status
                          format: date-time
                          type: string
                        message:
                          description: Message is an English text
                          type: string
                        reason:
                          description: Reason is why we're making this status change
                          type: string
                        status:
                          description: Status
                          type: string
                        type:
                          description: Type is the type of condition
                          type: string
                      required:
                      - lastProbeTime
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      type: object
                    type: array
                  state:
                    description: APISchemeConditionType - APISchemeConditionType
                    type: string
                type: object
            required:
            - spec
            type: object
        version: v1alpha1
        versions:
        - name: v1alpha1
          served: true
          storage: true
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: publishingstrategies.cloudingress.managed.openshift.io
      spec:
        group: cloudingress.managed.openshift.io
        names:
          kind: PublishingStrategy
          listKind: PublishingStrategyList
          plural: publishingstrategies
          singular: publishingstrategy
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            description: PublishingStrategy is the Schema for the publishingstrategies
              API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: PublishingStrategySpec defines the desired state of PublishingStrategy
                properties:
                  applicationIngress:
                    description: ApplicationIngress defines whether application ingress
                      is internal or external
                    items:
                      description: ApplicationIngress defines application ingress
                      properties:
                        certificate:
                          description: SecretReference represents a Secret Reference.
                            It has enough information to retrieve secret in any namespace
                          properties:
                            name:
                              description: Name is unique within a namespace to reference
                                a secret resource.
                              type: string
                            namespace:
                              description: Namespace defines the space within which
                                the secret name must be unique.
                              type: string
                          type: object
                        default:
                          description: Default defines default value of ingress when
                            cluster installs
                          type: boolean
                        dnsName:
                          type: string
                        listening:
                          description: Listening defines application ingress as internal
                            or external
                          type: string
                        routeSelector:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                      required:
                      - certificate
                      - default
                      - dnsName
                      type: object
                    type: array
                  defaultAPIServerIngress:
                    description: DefaultAPIServerIngress defines whether API is internal
                      or external
                    properties:
                      listening:
                        description: Listening defines internal or external ingress
                        type: string
                    type: object
                required:
                - applicationIngress
                - defaultAPIServerIngress
                type: object
              status:
                description: PublishingStrategyStatus defines the observed state of
                  PublishingStrategy
                type: object
            required:
            - spec
            type: object
        version: v1alpha1
        versions:
        - name: v1alpha1
          served: true
          storage: true
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: sshds.cloudingress.managed.openshift.io
      spec:
        group: cloudingress.managed.openshift.io
        names:
          kind: SSHD
          listKind: SSHDList
          plural: sshds
          singular: sshd
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            description: SSHD is the Schema for the sshds API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: SSHDSpec defines the desired state of SSHD
                properties:
                  allowedCIDRBlocks:
                    description: AllowedCIDRBlocks is the list of CIDR blocks that
                      should be allowed to access the SSHD service
                    items:
                      type: string
                    type: array
                  configMapSelector:
                    description: ConfigMapSelector is a label selector to isolate
                      config maps containing SSH authorized keys to be mounted into
                      the SSHD container
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  dnsName:
                    description: DNSName is the DNS name that should point to the
                      SSHD service load balancers, e.g. rh-ssh
                    type: string
                  image:
                    description: Image is the URL of the SSHD container image
                    type: string
                required:
                - allowedCIDRBlocks
                - dnsName
                - image
                type: object
              status:
                description: SSHDStatus defines the observed state of SSHD
                properties:
                  message:
                    description: Message is a description of the current state
                    type: string
                  state:
                    description: State is the current state of the controller
                    type: string
                type: object
            type: object
        version: v1alpha1
        versions:
        - name: v1alpha1
          served: true
          storage: true
