apiVersion: v1
kind: Template
parameters:
- name: REGISTRY_IMG
  required: true
- name: CHANNEL
  required: true
- name: IMAGE_TAG
  required: true
- name: IMAGE_DIGEST
  requred: true
- name: REPO_NAME
  value: cloud-ingress-operator
  required: true
- name: DISPLAY_NAME
  value: Cloud Ingress Operator
  required: true
metadata:
  name: selectorsyncset-template
objects:
- apiVersion: hive.openshift.io/v1
  kind: SelectorSyncSet
  metadata:
    annotations:
      component-display-name: ${DISPLAY_NAME}
      component-name: ${REPO_NAME}
      telemeter-query: csv_succeeded{_id="$CLUSTER_ID",name=~"${REPO_NAME}.*",exported_namespace=~"openshift-.*",namespace="openshift-operator-lifecycle-manager"} == 1
    labels:
      managed.openshift.io/gitHash: ${IMAGE_TAG}
      managed.openshift.io/gitRepoName: ${REPO_NAME}
      managed.openshift.io/osd: 'true'
    name: cloud-ingress-operator
  spec:
    clusterDeploymentSelector:
      matchLabels:
        api.openshift.com/managed: 'true'
      matchExpressions:
      - key: api.openshift.com/sts
        operator: NotIn
        values:
        - "true"
      - key: api.openshift.com/private-link
        operator: NotIn
        values:
        - "true"
    resourceApplyMode: Sync
    resources:
    - kind: Namespace
      apiVersion: v1
      metadata:
        name: openshift-cloud-ingress-operator
        labels:
          openshift.io/cluster-monitoring: 'true'
    - apiVersion: cloudcredential.openshift.io/v1
      kind: CredentialsRequest
      metadata:
        name: cloud-ingress-operator-credentials-aws
        namespace: openshift-cloud-ingress-operator
      spec:
        secretRef:
          name: cloud-ingress-operator-credentials-aws
          namespace: openshift-cloud-ingress-operator
        providerSpec:
          apiVersion: cloudcredential.openshift.io/v1
          kind: AWSProviderSpec
          statementEntries:
          - effect: Allow
            resource: '*'
            action:
            - elasticloadbalancing:*
            - ec2:DescribeAccountAttributes
            - ec2:DescribeAddresses
            - ec2:DescribeInternetGateways
            - ec2:DescribeSecurityGroups
            - ec2:DescribeSubnets
            - ec2:DescribeVpcs
            - ec2:DescribeVpcClassicLink
            - ec2:DescribeInstances
            - ec2:DescribeNetworkInterfaces
            - ec2:DescribeClassicLinkInstances
            - ec2:DescribeRouteTables
            - ec2:AuthorizeSecurityGroupEgress
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:CreateSecurityGroup
            - ec2:DeleteSecurityGroup
            - ec2:DescribeInstanceAttribute
            - ec2:DescribeInstanceStatus
            - ec2:DescribeNetworkAcls
            - ec2:DescribeSecurityGroups
            - ec2:RevokeSecurityGroupEgress
            - ec2:RevokeSecurityGroupIngress
            - ec2:DescribeTags
            - ec2:CreateTags
            - ec2:DeleteTags
            - route53:ChangeResourceRecordSets
            - route53:GetHostedZone
            - route53:GetHostedZoneCount
            - route53:ListHostedZones
            - route53:ListHostedZonesByName
            - route53:ListResourceRecordSets
            - route53:UpdateHostedZoneComment
    - apiVersion: cloudcredential.openshift.io/v1
      kind: CredentialsRequest
      metadata:
        name: cloud-ingress-operator-credentials-gcp
        namespace: openshift-cloud-ingress-operator
      spec:
        secretRef:
          name: cloud-ingress-operator-credentials-gcp
          namespace: openshift-cloud-ingress-operator
        providerSpec:
          apiVersion: cloudcredential.openshift.io/v1
          kind: GCPProviderSpec
          predefinedRoles:
          - roles/dns.admin
          - roles/compute.networkAdmin
          skipServiceCheck: true
    - apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        labels:
          opsrc-datastore: 'true'
          opsrc-provider: redhat
        name: ${REPO_NAME}-registry
        namespace: openshift-${REPO_NAME}
      spec:
        image: ${REGISTRY_IMG}@${IMAGE_DIGEST}
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/infra
                  operator: Exists
              weight: 1
        tolerations:
        - operator: Exists
          key: node-role.kubernetes.io/infra
          effect: NoSchedule
        displayName: ${REPO_NAME}
        icon:
          base64data: ''
          mediatype: ''
        publisher: Red Hat
        sourceType: grpc
        grpcPodConfig:
          securityContextConfig: restricted
          nodeSelector:
            node-role.kubernetes.io: infra
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/infra
            operator: Exists
    - apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: ${REPO_NAME}
        namespace: openshift-${REPO_NAME}
        annotations:
          olm.operatorframework.io/exclude-global-namespace-resolution: 'true'
      spec:
        targetNamespaces:
        - openshift-${REPO_NAME}
    - apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: ${REPO_NAME}
        namespace: openshift-${REPO_NAME}
      spec:
        channel: ${CHANNEL}
        name: ${REPO_NAME}
        source: ${REPO_NAME}-registry
        sourceNamespace: openshift-${REPO_NAME}
    # Kube-system role and binding
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: cluster-config-v1-reader-cio
        namespace: kube-system
      rules:
      - apiGroups:
        - ""
        resourceNames:
        - cluster-config-v1
        resources:
        - configmaps
        verbs:
        - get
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: cloud-ingress-operator-cluster-config-v1-reader
        namespace: kube-system
        labels:
          owner: cloud-ingress-operator
          owner.namespace: openshift-cloud-ingress-operator
      subjects:
      - kind: ServiceAccount
        name: cloud-ingress-operator
        namespace: openshift-cloud-ingress-operator
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: cluster-config-v1-reader-cio
    # Openshift-machine-api role and binding
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: cloud-ingress-operator
        namespace: openshift-machine-api
      rules:
      - apiGroups:
        - machine.openshift.io
        resources:
        - machines
        - machinesets
        verbs:
        - get
        - list
        - watch
        - patch
        - update
      - apiGroups:
        - ""
        resources:
        - services
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apps
        resources:
        - deployments
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - cloudingress.managed.openshift.io
        resources:
        - '*'
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: cloud-ingress-operator
        namespace: openshift-machine-api
      subjects:
      - kind: ServiceAccount
        name: cloud-ingress-operator
        namespace: openshift-cloud-ingress-operator
      roleRef:
        kind: Role
        name: cloud-ingress-operator
        namespace: openshift-machine-api
        apiGroup: rbac.authorization.k8s.io
      # Openshift-kube-apiserver role and binding
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: cloud-ingress-operator
        namespace: openshift-kube-apiserver
      rules:
      - apiGroups:
        - ""
        resources:
        - services
        - services/finalizers
        verbs:
        - get
        - list
        - watch
        - create
        - update
        - delete
      - apiGroups:
        - apps
        resources:
        - deployments
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - cloudingress.managed.openshift.io
        resources:
        - '*'
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: cloud-ingress-operator
        namespace: openshift-kube-apiserver
      subjects:
      - kind: ServiceAccount
        name: cloud-ingress-operator
        namespace: openshift-cloud-ingress-operator
      roleRef:
        kind: Role
        name: cloud-ingress-operator
        namespace: openshift-kube-apiserver
        apiGroup: rbac.authorization.k8s.io
    # Openshift-ingress role and binding
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: cloud-ingress-operator
        namespace: openshift-ingress
      rules:
      - apiGroups:
        - ""
        resources:
        - services
        - services/finalizers
        verbs:
        - get
        - list
        - watch
        - create
        - update
      - apiGroups:
        - apps
        resources:
        - deployments
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - cloudingress.managed.openshift.io
        resources:
        - '*'
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: cloud-ingress-operator
        namespace: openshift-ingress
      subjects:
      - kind: ServiceAccount
        name: cloud-ingress-operator
        namespace: openshift-cloud-ingress-operator
      roleRef:
        kind: Role
        name: cloud-ingress-operator
        namespace: openshift-ingress
        apiGroup: rbac.authorization.k8s.io
    # Openshift-ingress-operator role and binding
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: cloud-ingress-operator
        namespace: openshift-ingress-operator
      rules:
      - apiGroups:
        - operator.openshift.io
        resources:
        - ingresscontrollers
        verbs:
        - get
        - list
        - watch
        - patch
        - delete
        - create
        - update
      - apiGroups:
        - ""
        resources:
        - services
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apps
        resources:
        - deployments
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - cloudingress.managed.openshift.io
        resources:
        - '*'
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: cloud-ingress-operator
        namespace: openshift-ingress-operator
      subjects:
      - kind: ServiceAccount
        name: cloud-ingress-operator
        namespace: openshift-cloud-ingress-operator
      roleRef:
        kind: Role
        name: cloud-ingress-operator
        namespace: openshift-ingress-operator
        apiGroup: rbac.authorization.k8s.io
- apiVersion: hive.openshift.io/v1
  kind: SelectorSyncSet
  metadata:
    annotations:
      component-display-name: ${DISPLAY_NAME}
      component-name: ${REPO_NAME}
      telemeter-query: csv_succeeded{_id="$CLUSTER_ID",name=~"${REPO_NAME}.*",exported_namespace=~"openshift-.*",namespace="openshift-operator-lifecycle-manager"} == 1
    labels:
      managed.openshift.io/gitHash: ${IMAGE_TAG}
      managed.openshift.io/gitRepoName: ${REPO_NAME}
      managed.openshift.io/osd: 'true'
    name: cloud-ingress-operator-feature-labeller
  spec:
    clusterDeploymentSelector:
      matchLabels:
        api.openshift.com/managed: 'true'
      matchExpressions:
      - key: ext-managed.openshift.io/legacy-ingress-support
        operator: In
        values:
          - "false"
    resourceApplyMode: Sync
    # https://gitlab.cee.redhat.com/service/uhc-clusters-service/tree/master/pkg/osd/ingress_service.go
    # Where the name 'publishingstrategy' is defined
    patch: >
      {"kind": "PublishingStrategy", "apiVersion": "cloudingress.managed.openshift.io/v1alpha1", "metadata": {"name": "publishingstrategy", "labels": {"ext-managed.openshift.io/legacy-ingress-support": "false"}}}
    patchType: merge
